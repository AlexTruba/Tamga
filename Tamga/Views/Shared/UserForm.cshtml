@using Tamga.Models
@model UserViewModel
@using (Ajax.BeginForm("Save", "Home", null, new AjaxOptions(), new { @class = "user-form border-form" ,  @id = "form" + Model.Id }))
{
    @Html.HiddenFor(t => t.Id)
    <div class="form-group col-md-6">
        <div>@Html.LabelFor(m => m.Name, new { @for = "Name_" + Model.Id })</div>
        <div class="input-field">
            @Html.EditorFor(t => t.Name, new { htmlAttributes = new { @id = "Name_" + Model.Id } })
        </div>
        <div class="error-message"> @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })</div>
    </div>
    <div class="form-group col-md-6">
        <div>@Html.LabelFor(m => m.Surname, new { @for = ("Surname_" + Model.Id) })</div>
        <div class="input-field">
            @Html.EditorFor(t => t.Surname, new { htmlAttributes = new { @id = "Surname_" + Model.Id } })
        </div>
        <div class="error-message"> @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })</div>
    </div>

    <div class="form-group col-md-6">
        <div>@Html.LabelFor(m => m.Patronymic, new { @for = ("Patronymic_" + Model.Id) })</div>
        <div class="input-field">
            @Html.EditorFor(t => t.Patronymic, new { htmlAttributes = new { @id = "Patronymic_" + Model.Id } })
        </div>
        <div class="error-message"> @Html.ValidationMessageFor(m => m.Patronymic, "", new { @class = "text-danger" })</div>
    </div>

    <div class="form-group col-md-6">
        <div>@Html.LabelFor(m => m.PhoneNumber, new { @for = ("PhoneNumber_" + Model.Id) })</div>
        <div class="input-field">
            @Html.PhoneNumberFor(t => t.PhoneNumber, new { htmlAttributes = new { @id = "PhoneNumber_" + Model.Id } })
        </div>
        <div class="error-message"> @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })</div>
    </div>
    <div class="clearfix"></div>
    <div class="form-group col-md-12 inline-group">
        <div class="input-field inline-checkbox">
            @Html.EditorFor(t => t.Employed, "Employed" + Model.Id, new { htmlAttributes = new { @class = "change-checkbox", onclick = "onClickEvent();", @id = "Employed_" + Model.Id } })
        </div>
        <div>@Html.LabelFor(m => m.Employed,  new { @for = ("Employed_" + Model.Id) } )</div>
    </div>
    <div class="employed-fields change-visible hide">
        <div class="form-group col-md-6">
            <div>@Html.LabelFor(m => m.OrganizationName, new { @for = "OrganizationName_" + Model.Id })</div>
            <div class="input-field">
                @Html.EditorFor(t => t.OrganizationName, new { htmlAttributes = new { @id = "OrganizationName_" + Model.Id } })
            </div>
            <div class="error-message"> @Html.ValidationMessageFor(m => m.OrganizationName, "", new { @class = "text-danger" })</div>
        </div>
        <div class="form-group col-md-6">
            <div>@Html.LabelFor(m => m.StartOnUtc, new { @for = "StartOnUtc_" + Model.Id })</div>
            <div class="input-field">
                @Html.EditorFor(t => t.StartOnUtc, new { htmlAttributes = new { @id = "StartOnUtc_" + Model.Id } })
            </div>
            <div class="error-message"> @Html.ValidationMessageFor(m => m.StartOnUtc, "", new { @class = "text-danger" })</div>
        </div>
        <div class="clearfix"></div>
    </div>
}
<div class="clearfix"></div>